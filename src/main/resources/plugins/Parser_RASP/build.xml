<?xml version="1.0"?>

<project name="rasp2" default="all" basedir=".">
   <description> Rasp2 plugin for GATE</description>

    <!-- Prevent Ant from warning about includeantruntime not being set -->
    <property name="build.sysclasspath" value="ignore" />

	<!-- *******************************************************************
       ****************  USER OPTIONS ************************************
       *******************************************************************
       Make changes to this section of the build file to customise your
       test and build script -->
	  <!-- Allow overriding of properties via build.properties -->
	  <property file="build.properties" />

	  <!-- Documentation directory -->
  	  <property name="docDir"  location="doc"/>

	<property name="gate.home" location="../../" />

 	  <fileset id="lib" dir="lib">
 	    <include name="*.jar"/>
	  </fileset>
	
	  <fileset id="gatelib.classpath" dir="${gate.home}/lib">
	    <include name="*.jar"/>
	    <include name="*.zip"/>
	  </fileset>

	  <fileset id="gate.classpath" dir="${gate.home}/bin">
	    <include name="*.jar"/>
	    <include name="*.zip"/>
	  </fileset>
          
	  <path id="compile.classpath">
		<fileset refid="lib"/>
		<fileset refid="gatelib.classpath"/>
		<fileset refid="gate.classpath"/>
	  </path>
	
	<!-- RUNTIME MEMORY -->
	<property name="run.memory" value="200M" />

	<!-- *******************************************************************
       ****************  USER OPTIONS END HERE! **************************
       ******************************************************************* -->

	<!-- set global properties for this build -->

	<!-- Directories -->

	<!-- Sources -->
	<property name="srcDir" location="src" />

	<!-- Output directory for the build process -->
	<property name="classes.dir" location="classes" />
	<property name="jar.location" location="rasp2.jar" />

	<!-- Use the new 1.3+ compiler -->
	<property name="build.compiler" value="modern" />

	  <!-- create build directory structure -->
	  <target name="prepare">
		<mkdir dir="${classes.dir}"/>
	  </target>

	<!-- Make documentation -->
  	<target name="javadoc">
   	 <javadoc access="protected" 
              destdir="${docDir}/javadoc"
              classpathref="compile.classpath"
              Encoding="UTF-8"
              Use="yes"
              Windowtitle="TextClassification JavaDoc"
              docencoding="UTF-8"
              charset="UTF-8"
              source="1.6"
              useexternalfile="yes"
              breakiterator="true">
      	<fileset dir="${srcDir}"/>        
        <link href="http://docs.oracle.com/javase/6/docs/api/" />
        <link href="http://gate.ac.uk/gate/doc/javadoc/" />
    	</javadoc>
  	</target>
          

   	 <target name="copy.resources" depends="prepare"
    	    description="copy non-.java files from src to build" >
  	  <copy todir="${classes.dir}" includeEmptyDirs="true">
 	     <fileset dir="${srcDir}" excludes="**/*.java" />
	    </copy>
	</target>

          
	<!-- This target compiles all the classes including debug information
	-->
	<target name="compile" description="compile the source "
	depends="prepare">
		<!-- Compile the java code from ${srcDir} into ${classes.dir} -->
		<javac classpathref="compile.classpath" srcdir="${srcDir}" destdir="${classes.dir}" encoding="UTF-8"
		source="1.5" target="1.5" debug="true" />
	</target>

       <target name="jar" depends="compile,copy.resources">
	<jar destfile="${jar.location}" update="false" index="true">
                <fileset dir="${classes.dir}/"/>
	</jar>
	</target>
        
	<!-- Everything! -->
	<target name="all" depends="clean,jar">
	</target>



  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <target name="clean.jar" >
    <delete file="${jar.location}" />
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes, clean.jar" />


  <!-- Targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests - there aren't any
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
  <target name="build" depends="jar" />
  <target name="test" />
  <target name="distro.prepare" depends="clean.classes" />

</project>
